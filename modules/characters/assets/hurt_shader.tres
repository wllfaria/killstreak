[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://docqwp4sm7wwy"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_8bt4p"]
output_port_for_preview = 0
parameter_name = "hurt_color"
default_value_enabled = true

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_uksb3"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_bhs4w"]
source = 5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_3n40q"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 hurt_color : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);



void fragment() {
	vec4 n_out7p0;
// Texture2D:7
	n_out7p0 = texture(TEXTURE, UV);


// ColorParameter:2
	vec4 n_out2p0 = hurt_color;


// Mix:8
	vec4 n_in8p2 = vec4(0.50000, 0.50000, 0.50000, 0.50000);
	vec4 n_out8p0 = mix(n_out7p0, n_out2p0, n_in8p2);


// Output:0
	COLOR.rgb = vec3(n_out8p0.xyz);


}
"
graph_offset = Vector2(-429.849, 135.666)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(460, 320)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_8bt4p")
nodes/fragment/2/position = Vector2(-440, 520)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_uksb3")
nodes/fragment/6/position = Vector2(-440, 360)
nodes/fragment/7/node = SubResource("VisualShaderNodeTexture_bhs4w")
nodes/fragment/7/position = Vector2(-120, 240)
nodes/fragment/8/node = SubResource("VisualShaderNodeMix_3n40q")
nodes/fragment/8/position = Vector2(180, 300)
nodes/fragment/connections = PackedInt32Array(6, 0, 7, 2, 7, 0, 8, 0, 2, 0, 8, 1, 8, 0, 0, 0)
